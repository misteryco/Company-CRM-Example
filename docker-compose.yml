services:
  crm-app:
    build: .
    restart: always
    ports:
      - 8001:8000
    volumes:
      - .:/code
    environment:
      #  Env variables bellow are from .env file for Docker(in the current dir), more app specific settings
      #  are defined in .env file, located in "./crm_for_companies" directory
      DEBUG: off
      CELERY_RESULT_BACKEND_: ${CELERY_RESULT_BACKEND_:?}
      DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.db
    restart: always
    ports:
      - "5433:5432"
    environment:
      #  Env variables bellow are from .env file for Docker(in the current dir), more app specific settings
      #  are defined in .env file, located in "./crm_for_companies" directory
      POSTGRES_PASSWORD: ${DB_PASSWORD:?}
      POSTGRES_USER: ${DB_USERNAME:?}
      POSTGRES_DB: ${DB_HOST:?}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgresql_dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'" ]
      interval: 10s
      timeout: 30s
      retries: 3
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 10
